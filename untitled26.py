# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h0oDnCnbgik1E8zhuBAmeXx0ZLVWqMgi
"""

import pandas as pd
import matplotlib.pyplot as plt

# 1. Pobierz tabelę Statistics
data = {'State/territory': ['Australian Capital Territory', 'New South Wales', 'Victoria', 'Queensland', 
                            'South Australia', 'Western Australia', 'Tasmania', 'Northern Territory'],
        'Land area (km²)': [2358, 800642, 227416, 1730648, 983482, 2529875, 68401, 1349129],
        'Population (2004)': [324300, 6760000, 5002300, 3919500, 1537900, 1998400, 484000, 200800],
        'Population density (/km²)': [137.53, 8.44, 22, 2.26, 1.56, 0.79, 7.08, 0.15],
        'Capital': ['Canberra', 'Sydney', 'Melbourne', 'Brisbane', 'Adelaide', 'Perth', 'Hobart', 'Darwin']}
df = pd.DataFrame(data)

# 2. Przedstaw zestawienie posortowane według obszaru.
df_sorted = df.sort_values(by='Land area (km²)', ascending=False)
print(df_sorted)

# 3. Stwórz wykres słupkowy 4 największych stanów Australii według gęstości zaludnienia.
top4_density = df.nlargest(4, 'Population density (/km²)')
top4_density.plot(x='State/territory', y='Population density (/km²)', kind='bar')
plt.show()

# 4. Stwórz wykres kołowy stanów Australii według liczy ludności, wyświetl te stany, któych liczba luności jest większa od średniej.
mean_pop = df['Population (2004)'].mean()
above_average_pop = df[df['Population (2004)'] > mean_pop]
above_average_pop.plot.pie(y='Population (2004)', labels=above_average_pop['State/territory'], autopct='%1.1f%%')
plt.show()

# 5. Wyświetl stany o największym i najmniejszym terytorium oraz o największej i najmniejszej liczbie ludności.
largest_area = df[df['Land area (km²)'] == df['Land area (km²)'].max()]
smallest_area = df[df['Land area (km²)'] == df['Land area (km²)'].min()]
largest_pop = df[df['Population (2004)'] == df['Population (2004)'].max()]
smallest_pop = df[df['Population (2004)'] == df['Population (2004)'].min()]
print('Largest area:', largest_area['State/territory'].values)
print('Smallest area:', smallest_area['State/territory'].values)
print('Largest population:', largest_pop['State/territory'].values)
print('Smallest population:', smallest_pop['State/territory'].values)

# 6. Utwórz suploty (wykres słupkowy) dla największego i najmniejszwego stanu porównującego gęstość zaludnienia i liczbe ludności.
fig, axs = plt.subplots(2, 2)
axs[0, 0].bar(largest_area['State/territory'], largest_area['Population density (/km²)'])
axs[0, 0].set_title('Population density in the largest state')
axs[0, 1].bar(largest_area['State/territory'], largest_area['Population (2004)'])
axs[0, 1].set_title('Population in the largest state')
axs[1, 0].bar(smallest_area['State/territory'], smallest_area['Population density (/km²)'])
axs[1, 0].set_title('Population density in the smallest state')
axs[1, 1].bar(smallest_area['State/territory'], smallest_area['Population (2004)'])
axs[1, 1].set_title('Population in the smallest state')
plt.tight_layout()
plt.show()

# 7. Z ramki danych stwórz słownik, którego klucz to nazwy terytoriów zamorskich, natomiast wartości to słownik, 
# którego klucz to wielkość, a wartość to lista z danymi ramki danych oraz klucz to ilośc mieszkańców, a wartość to lista z danymi ramki danych.
dict_df = df.set_index('State/territory')[['Land area (km²)', 'Population (2004)']].T.to_dict()
print(dict_df)

